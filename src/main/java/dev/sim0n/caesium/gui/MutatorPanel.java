package dev.sim0n.caesium.gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;

public class MutatorPanel extends JPanel {

    protected JCheckBox stringLiteralcheckBox;
    protected JCheckBox controlFlowMutatorCheckBox;
    protected JCheckBox numberMutatorCheckBox;

    protected JComboBox<String> referenceMutatorComboBox;
    protected JComboBox<String> localVariableMutatorComboBox;
    protected JComboBox<String> lineNumberMutatorComboBox;

    protected JCheckBox polymorphMutatorCheckBox;
    protected JCheckBox imageCrashMutatorCheckBox;
    protected JCheckBox classFolderMutatorCheckBox;
    protected JCheckBox trimMutatorCheckBox;
    protected JCheckBox shuffleMutatorCheckBox;
    private JPanel contentPanel;

    protected MutatorPanel() {
        init();
    }

    private void init() {
        referenceMutatorComboBox.addItem("Off");
        referenceMutatorComboBox.addItem("Light");
        referenceMutatorComboBox.addItem("Normal");

        localVariableMutatorComboBox.addItem("Off");
        localVariableMutatorComboBox.addItem("Remove");
        localVariableMutatorComboBox.addItem("Rename");

        lineNumberMutatorComboBox.addItem("Off");
        lineNumberMutatorComboBox.addItem("Remove");
        lineNumberMutatorComboBox.addItem("Rename");
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPanel = new JPanel();
        contentPanel.setLayout(new GridLayoutManager(11, 2, new Insets(0, 0, 0, 0), -1, -1));
        stringLiteralcheckBox = new JCheckBox();
        stringLiteralcheckBox.setText("String literal mutation");
        contentPanel.add(stringLiteralcheckBox, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        controlFlowMutatorCheckBox = new JCheckBox();
        controlFlowMutatorCheckBox.setText("Control flow mutation");
        contentPanel.add(controlFlowMutatorCheckBox, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        numberMutatorCheckBox = new JCheckBox();
        numberMutatorCheckBox.setText("Number mutation");
        contentPanel.add(numberMutatorCheckBox, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Reference Mutation");
        contentPanel.add(label1, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        referenceMutatorComboBox = new JComboBox();
        contentPanel.add(referenceMutatorComboBox, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Local Variable tables");
        contentPanel.add(label2, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Line Number tables");
        contentPanel.add(label3, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        localVariableMutatorComboBox = new JComboBox();
        contentPanel.add(localVariableMutatorComboBox, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        lineNumberMutatorComboBox = new JComboBox();
        contentPanel.add(lineNumberMutatorComboBox, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        polymorphMutatorCheckBox = new JCheckBox();
        polymorphMutatorCheckBox.setText("Polymorph");
        contentPanel.add(polymorphMutatorCheckBox, new GridConstraints(6, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        imageCrashMutatorCheckBox = new JCheckBox();
        imageCrashMutatorCheckBox.setText("Crasher");
        contentPanel.add(imageCrashMutatorCheckBox, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        classFolderMutatorCheckBox = new JCheckBox();
        classFolderMutatorCheckBox.setText("Class Folder");
        contentPanel.add(classFolderMutatorCheckBox, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        trimMutatorCheckBox = new JCheckBox();
        trimMutatorCheckBox.setText("Trimmer");
        contentPanel.add(trimMutatorCheckBox, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        shuffleMutatorCheckBox = new JCheckBox();
        shuffleMutatorCheckBox.setText("Shuffle Members");
        contentPanel.add(shuffleMutatorCheckBox, new GridConstraints(9, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        contentPanel.add(spacer1, new GridConstraints(10, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        contentPanel.add(spacer2, new GridConstraints(10, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPanel;
    }

}
